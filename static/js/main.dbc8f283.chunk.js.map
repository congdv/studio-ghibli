{"version":3,"sources":["store/movies.js","assets/images/logo.png","components/Card/index.js","components/Loader/index.js","utils/onEscapeKeyDown.js","utils/useDeepCompareMemoize.js","utils/onOutsideClick.js","components/Modal/index.js","components/CardDetail/index.js","screens/Home/index.js","App.js","store/reducers.js","store/sagas.js","store/index.js","index.js"],"names":["fetchMovies","MovieTypes","fetch","then","response","json","movies","put","type","payload","loaded","console","error","Card","title","description","rest","className","useOnEscapeKeyDown","isListening","onEscapeKeyDown","useEffect","handleKeyDown","event","keyCode","document","addEventListener","removeEventListener","useDeepCompareMemoize","value","valueRef","useRef","isEqual","current","useOnOutsideClick","$ignoredElementRefs","onOutsideClick","$listeningElementRef","$mouseDownTargetRef","$ignoredElementRefsMemoized","flat","handleMouseDown","target","handleMouseUp","isAnyIgnoredElementAncestorOfTarget","some","$elementRef","contains","button","$listeningElement","$root","getElementById","Modal","propsIsOpen","isOpen","tellParentToClose","onClose","renderContent","useState","stateIsOpen","setStateOpen","isControlled","$modalRef","$clickableOverLayRef","closeModal","useCallback","body","style","overflow","ReactDOM","createPortal","ref","close","CardDetail","movie","producer","release_date","rt_score","HomePage","setOpen","selectedMovie","setMovie","log","dispatch","useDispatch","useSelector","state","src","GhibliLogo","alt","map","key","onClick","id","foundMovie","find","m","Loader","App","Home","rootReducers","combineReducers","action","rootSaga","all","sagaMiddleWare","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","render"],"mappings":"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","file":"static/js/main.dbc8f283.chunk.js","sourcesContent":["import { put } from 'redux-saga/effects';\n\nexport const MovieTypes = {\n  ALL_MOVIES: 'movie/ALL_MOVIES',\n};\n\nexport const movieInitialState = {\n  loaded: false,\n};\n\nexport const movieReducer = (state = {}, action) => {\n  switch (action.type) {\n    case MovieTypes.ALL_MOVIES:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nfunction* fetchMovies() {\n  try {\n    const movies = yield fetch('https://ghibliapi.herokuapp.com/films').then((response) => response.json());\n    yield put({ type: MovieTypes.ALL_MOVIES, payload: { movies, loaded: true } });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default fetchMovies;\n","export default __webpack_public_path__ + \"static/media/logo.a4d05b32.png\";","import React from 'react';\nimport './style.css';\n\nconst Card = ({ title, description, ...rest }) => {\n  return (\n    <div className=\"card\" {...rest}>\n      <h1 className=\"card__title\">{title}</h1>\n      <p className=\"card__description\">{description}</p>\n    </div>\n  );\n};\n\nexport default Card;\n  ","import React from 'react';\n\nimport './styles.css';\n\nexport default () => {\n  return (\n    <div className=\"loader\">\n      <div className=\"loader__element\" />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nconst ESCAPE = 27;\n\nconst useOnEscapeKeyDown = (isListening, onEscapeKeyDown) => {\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.keyCode === ESCAPE) {\n        onEscapeKeyDown();\n      }\n    };\n\n    if (isListening) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isListening, onEscapeKeyDown]);\n};\n\nexport default useOnEscapeKeyDown;\n","import { useRef } from 'react';\nimport { isEqual } from 'lodash';\n\nconst useDeepCompareMemoize = value => {\n  const valueRef = useRef();\n\n  if (!isEqual(value, valueRef.current)) {\n    valueRef.current = value;\n  }\n  return valueRef.current;\n};\n\nexport default useDeepCompareMemoize;","import { useEffect, useRef } from 'react';\n\nimport useDeepCompareMemoize from './useDeepCompareMemoize';\n\nconst useOnOutsideClick = ($ignoredElementRefs, isListening, onOutsideClick, $listeningElementRef) => {\n  const $mouseDownTargetRef = useRef();\n  const $ignoredElementRefsMemoized = useDeepCompareMemoize([$ignoredElementRefs].flat());\n\n  useEffect(() => {\n    const handleMouseDown = (event) => {\n      $mouseDownTargetRef.current = event.target;\n    };\n\n    const handleMouseUp = (event) => {\n      const isAnyIgnoredElementAncestorOfTarget = $ignoredElementRefsMemoized.some(\n        ($elementRef) =>\n          $elementRef.current.contains($mouseDownTargetRef.current) || $elementRef.current.contains(event.target),\n      );\n      if (event.button === 0 && !isAnyIgnoredElementAncestorOfTarget) {\n        onOutsideClick();\n      }\n    };\n\n    const $listeningElement = ($listeningElementRef || {}).current || document;\n\n    if (isListening) {\n      $listeningElement.addEventListener('mousedown', handleMouseDown);\n      $listeningElement.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      $listeningElement.removeEventListener('mousedown', handleMouseDown);\n      $listeningElement.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [$ignoredElementRefsMemoized, $listeningElementRef, isListening, onOutsideClick]);\n};\n\nexport default useOnOutsideClick;\n","import React, { Fragment, useCallback, useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport useOnEscapeKeyDown from 'utils/onEscapeKeyDown';\nimport useOnOutsideClick from 'utils/onOutsideClick';\nimport './style.css';\n\nconst $root = document.getElementById('root');\n\nconst Modal = ({ isOpen: propsIsOpen, onClose: tellParentToClose, renderContent }) => {\n  const [stateIsOpen, setStateOpen] = useState(false);\n  const isControlled = typeof propsIsOpen === 'boolean';\n  const isOpen = isControlled ? propsIsOpen : stateIsOpen;\n\n  const $modalRef = useRef();\n  const $clickableOverLayRef = useRef();\n\n  const closeModal = useCallback(() => {\n    if (!isControlled) {\n      setStateOpen(false);\n    } else {\n      tellParentToClose();\n    }\n  }, [isControlled, tellParentToClose]);\n\n  useOnOutsideClick($modalRef, isOpen, closeModal, $clickableOverLayRef);\n  useOnEscapeKeyDown(isOpen, closeModal);\n\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n    return () => {\n      document.body.style.overflow = 'visible';\n    };\n  }, [isOpen]);\n\n  return (\n    <Fragment>\n      {isOpen &&\n        ReactDOM.createPortal(\n          <div className=\"scrollOverlay\">\n            <div className=\"clickableOverlay\">\n              <div className=\"modal\" ref={$modalRef}>\n                {renderContent({ close: closeModal })}\n              </div>\n            </div>\n          </div>,\n          $root,\n        )}\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport './style.css';\n\nconst CardDetail = ({ movie }) => {\n  const { title, description, producer, release_date, rt_score } = movie;\n  return (\n    <div className=\"cardDetail\">\n      <h1 className=\"cardDetail__title\">{title}</h1>\n      <p className=\"cardDetail__description\">{description}</p>\n      <p className=\"cardDetail__section\">\n        <span>Producer:</span>\n        {producer}\n      </p>\n      <p className=\"cardDetail__section\">\n        <span>Release Date:</span>\n        {release_date}\n      </p>\n      <p className=\"cardDetail__section\">\n        <span>Rotten Tomatoes Score:</span>\n        {rt_score}\n      </p>\n    </div>\n  );\n};\n\nexport default CardDetail;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { MovieTypes } from 'store/movies';\nimport './style.css';\nimport GhibliLogo from 'assets/images/logo.png';\nimport Card from 'components/Card';\nimport Loader from 'components/Loader';\nimport Modal from 'components/Modal';\nimport CardDetail from 'components/CardDetail';\n\nconst HomePage = () => {\n  const [isOpen, setOpen] = useState(false);\n  const [selectedMovie, setMovie] = useState(null);\n  console.log(\"HomePage -> selectedMovie\", selectedMovie)\n  const dispatch = useDispatch();\n  const { loaded, movies } = useSelector((state) => state.movie);\n  useEffect(() => {\n    dispatch({ type: MovieTypes.ALL_MOVIES });\n  }, [dispatch]);\n\n  const openMovie = (id) => {\n    return () => {\n      const foundMovie = movies.find((m) => m.id === id);\n      setMovie(foundMovie);\n      setOpen(foundMovie !== null);\n    };\n  };\n\n  return (\n    <div>\n      <div className=\"logo\">\n        <img src={GhibliLogo} alt=\"Ghibli Studio\" />\n      </div>\n      {isOpen && (\n        <Modal\n          isOpen\n          onClose={() => {\n            setOpen(false);\n          }}\n          renderContent={() => <CardDetail movie={selectedMovie} />}\n        />\n      )}\n      <div className=\"container\">\n        {!loaded ? (\n          <Loader />\n        ) : (\n          movies.map((movie, key) => (\n            <Card key={key} title={movie.title} description={movie.description} onClick={openMovie(movie.id)} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import './App.css';\nimport HomePage from 'screens/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport { movieReducer } from './movies';\n\nexport const rootReducers = combineReducers({ movie: movieReducer });\n","import { all } from 'redux-saga/effects';\nimport fetchMovies from './movies';\n\nexport default function* rootSaga() {\n  yield all([fetchMovies()]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootReducers } from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst store = createStore(rootReducers, {}, composeWithDevTools(applyMiddleware(sagaMiddleWare)));\n\nsagaMiddleWare.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from 'store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}